name: Tests

on:
  push:
    paths:
      - "src/**"
      - "tests/**"
  pull_request:
    branches: [master]
    paths:
      - "src/**"
      - "tests/**"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov pytest-mock flake8 black isort ffsubsync guessit

      - name: Lint with flake8
        run: |
          flake8 src/jimaku_dl --max-line-length 88

      - name: Check formatting with black
        run: |
          black --check src/jimaku_dl

      - name: Check imports with isort
        run: |
          isort --check src/jimaku_dl

      - name: Test with pytest
        run: |
          pytest --cov-branch --cov=jimaku_dl --cov-report=xml
          pytest --cov --junitxml=junit.xml -o junit_family=legacy

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
